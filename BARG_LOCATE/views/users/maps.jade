extends layout/layout_2

block content

    #floating-panel
        form
            .form-group
                label(for='address') Địa chỉ gốc:
                input#address.form-control(type='textbox')
            .form-group
                label(for='info') Địa chỉ định vị:
                input#info.form-control(type='textbox')
            input#submit(type='button', value='Tìm kiếm', class="btn btn-primary")

    #map
    script.
        var map;
        var geocoder;
        var marker;
        var motobike;
        var motobike_arr=[]
        var default_position = {lat:10.7666851, lng: 106.641758};

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 13,
                center: default_position,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            generateMotoBikeLocation(default_position, map ,true)
            geocoder = new google.maps.Geocoder();
            document.getElementById('submit').addEventListener('click', function () {
                clearOverlays();
                geocodeAddress(geocoder, map);
            });
        }

        function geocodePosition(pos) {
            geocoder.geocode({
                latLng: pos
            }, function (responses) {
                if (responses && responses.length > 0) {
                    document.getElementById('info').value = responses[0].formatted_address;
                } else {
                    document.getElementById('info').value = 'Cannot determine address at this location.';
                }
            });
        }
        function generateMotoBikeLocation(location, map, first){
            icon = {
                url: 'https://image.flaticon.com/icons/svg/296/296210.svg',
                scaledSize: new google.maps.Size(50, 50), 
                origin: new google.maps.Point(0,0),
                anchor: new google.maps.Point(30, 30)
            };
            let max =10           
            if(first)
                max = 100
            for (let i =0;i< max ;i++){
                let fix_lat = i % 2 == 0 ? -1 : 1
                let fix_lng = i % 2 != 0 ? -1 : 1
                let pos = {
                    lat: i*(Math.random())/500 * fix_lat + location.lat,
                    lng: i*(Math.random())/500 * fix_lng + location.lng
                }
                motobike = new google.maps.Marker({
                    map: map,
                    position: pos,
                    icon:icon,
                    draggable: true,
                })
                motobike_arr.push(motobike)
            }
        }
        function clearOverlays() {
            for (var i = 0; i < motobike_arr.length; i++ ) {
                motobike_arr[i].setMap(null);
            }
            motobike_arr.length = 0;
        }
        function geocodeAddress(geocoder, resultsMap) {
            var address = document.getElementById('address').value;
            geocoder.geocode({'address': address}, function (results, status) {
                if (status === 'OK') {
                    resultsMap.setCenter(results[0].geometry.location);
                    marker = new google.maps.Marker({
                        map: resultsMap,
                        position: results[0].geometry.location,
                        draggable: true,
                    });
                    generateMotoBikeLocation({
                        lat:results[0].geometry.viewport.f.f,
                        lng:results[0].geometry.viewport.b.b
                    }, resultsMap)
                    google.maps.event.addListener(marker, 'dragend', function () {
                        geocodePosition(marker.getPosition());
                    });
                    google.maps.event.addListener(marker, 'click', function () {
                        if (marker.formatted_address) {
                            document.getElementById('info').value = marker.formatted_address + "<br>coordinates: " + marker.getPosition().toUrlValue(6);
                        } else {
                           //document.getElementById('info').value = address + "<br>coordinates: " + marker.getPosition().toUrlValue(6);
                            document.getElementById('info').value = address;
                        }
                        //infowindow.open(map, marker);
                    });
                    google.maps.event.trigger(marker, 'click');
                    if (results[0].geometry.viewport)
                        resultsMap.fitBounds(results[0].geometry.viewport);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
        $(document).ready(function () {
            var socket = io('http://localhost:8000');
            socket.on('connect', function () {
                socket.emit("LOCATE");
            });
            socket.on('recieve-data-from-phonis', function (data) {
                $('#address').val(data.address);
                $('#submit').trigger('click');
                socket.on('disconnect');
            });
        });
    script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key=AIzaSyDh7g2FscTKbTHcSpWNvuX6EFWSm81zprQ&callback=initMap')
